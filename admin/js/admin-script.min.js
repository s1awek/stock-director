const{createApp:createApp,ref:ref,computed:computed,watch:watch,nextTick:nextTick,onMounted:onMounted,onUnmounted:onUnmounted}=Vue;const app=createApp({setup(){const conditions=ref(initialConditions||[]);const loading=ref(false);const formModified=ref(false);const conditionsChanged=ref(false);const newCondition=ref({minQuantity:1,maxQuantity:null,message:""});watch(conditions,(currentConditions=>{formModified.value=true;if(currentConditions.length>0){const lastCondition=currentConditions[currentConditions.length-1];newCondition.value.minQuantity=lastCondition.maxQuantity}else{newCondition.value.minQuantity=1}}),{immediate:true});const isValidNewCondition=computed((()=>{const{minQuantity:minQuantity,maxQuantity:maxQuantity,message:message}=newCondition.value;const isRangeValid=minQuantity!==null&&maxQuantity!==null&&parseInt(minQuantity)<parseInt(maxQuantity);const isMessageFilled=message.trim().length>0;const isUniqueRange=conditions.value.length===0||conditions.value.every((condition=>maxQuantity>condition.maxQuantity));return isRangeValid&&isMessageFilled&&isUniqueRange}));const addCondition=()=>{if(isValidNewCondition.value){conditions.value.push({...newCondition.value});conditions.value.sort(((a,b)=>a.minQuantity-b.minQuantity));conditions.value.forEach(((condition,idx)=>{if(idx>0){conditions.value[idx].minQuantity=conditions.value[idx-1].maxQuantity}}));newCondition.value={minQuantity:conditions.value[conditions.value.length-1].maxQuantity,maxQuantity:null,message:""};nextTick((()=>{document.getElementById("maxQuantity").focus()}));conditionsChanged.value=true}};const removeCondition=index=>{conditions.value.splice(index,1);if(conditions.value.length===0){newCondition.value.minQuantity=1}else{if(index<conditions.value.length){conditions.value[index].minQuantity=conditions.value[index-1].maxQuantity}}};const saveConditions=async()=>{loading.value=true;try{const response=await fetch(mwsData.ajax_url,{method:"POST",credentials:"same-origin",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams({action:"save_conditions",nonce:mwsData.nonce,conditions:JSON.stringify(conditions.value)})});if(!response.ok){throw new Error("Network response was not ok.")}const responseData=await response.json();if(responseData.success){console.log("Settings saved")}else{console.error("Error from WP")}}catch(error){console.error("Fetch error:",error)}loading.value=false;conditionsChanged.value=false;formModified.value=false};onMounted((()=>{window.addEventListener("beforeunload",handleBeforeUnload)}));onUnmounted((()=>{window.removeEventListener("beforeunload",handleBeforeUnload)}));function handleBeforeUnload(event){if(formModified.value){const message=mwsData.reloadMessage||"You have unsaved changes. Are you sure you want to leave?";event.returnValue=message;return message}}return{conditions:conditions,newCondition:newCondition,addCondition:addCondition,removeCondition:removeCondition,saveConditions:saveConditions,isValidNewCondition:isValidNewCondition,loading:loading,conditionsChanged:conditionsChanged}}});app.mount("#wp-stock-director-settings");
//# sourceMappingURL=admin-script.min.js.map
